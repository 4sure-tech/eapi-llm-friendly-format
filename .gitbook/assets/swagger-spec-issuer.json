{"openapi":"3.0.0","paths":{"/api/lob/{lob_id}/send-oob-offer":{"post":{"operationId":"CredentialsController_sendOOBOffer","summary":"Send Out-Of-Band Credential offer","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendOOBOfferRequest"}}}},"responses":{"201":{"description":"API successfully created new records","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendOOBOfferResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["issue-credential"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/prepare-url-offer":{"post":{"operationId":"CredentialsController_prepareQrOffer","summary":"Credential offer is prepared as a URL and returned to the LOB","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PrepareQrOfferRequest"}}}},"responses":{"201":{"description":"API successfully created new records","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendPrepareQROfferResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["issue-credential"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/offer-to-contact":{"post":{"operationId":"CredentialsController_sendOffer","summary":"Send Credential offer to a contact","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendOfferRequest"}}}},"responses":{"201":{"description":"API successfully created new records","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendOfferResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["issue-credential"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/issue-credential":{"post":{"operationId":"CredentialsController_issueCredential","summary":"Issue a Credential to a recipient","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueCredentialRequest"}}}},"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueCredentialResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["issue-credential"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/offers":{"get":{"operationId":"CredentialsController_getCredentialOffer","summary":"Retrieve all pending Credential offers that have been sent","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{"type":"string"}},{"name":"contact_id","required":false,"in":"query","schema":{"type":"string"}},{"name":"search","required":false,"in":"query","schema":{"type":"string"}},{"name":"page","required":true,"in":"query","schema":{"example":1,"type":"number"}},{"name":"limit","required":true,"in":"query","schema":{"example":10,"type":"number"}}],"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueCredentialRecordResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["issue-credential"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/offers/{cred_offer_id}":{"get":{"operationId":"CredentialsController_getCredentialOfferStatus","summary":"Retrieve issued credential status","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{"type":"string"}},{"name":"cred_offer_id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"API request processed successfully"},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["issue-credential"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/revoke-credential":{"post":{"operationId":"CredentialsController_revokeCredential","summary":"Revoke an Issue Credential","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RevokeCredentialRequestDto"}}}},"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RevokeCredentialResponseDto"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["issue-credential"],"security":[{"api-key":[]}]}},"/health":{"get":{"operationId":"HealthController_selfCheck","summary":"this api check application running health","parameters":[],"responses":{"200":{"description":"The Health Check is successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"ok"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"error":{"type":"object","example":{},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true}}}}}}},"503":{"description":"The Health Check is not successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"error":{"type":"object","example":{"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"},"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true}}}}}}}},"tags":["health"]}}},"info":{"title":"Orbit Enterprise Issuer API","description":"Issuer API is a SAAS service that Issuer entity uses to credential offers to peer entities.","version":"1.0","contact":{}},"tags":[],"servers":[],"components":{"securitySchemes":{"api-key":{"type":"apiKey","in":"header","name":"api-key"}},"schemas":{"BadRequestResponse":{"type":"object","properties":{"message":{"type":"string","example":"A required parameter was missing in the request"},"error":{"type":"string","example":"Bad Request"},"statusCode":{"type":"number","example":400}},"required":["message","error","statusCode"]},"UnauthorizedResponse":{"type":"object","properties":{"message":{"type":"string","example":"Invalid API Key included in the request"},"error":{"type":"string","example":"UnauthorizedException"},"statusCode":{"type":"number","example":401}},"required":["message","error","statusCode"]},"NotFoundErrorResponse":{"type":"object","properties":{"message":{"type":"string","example":"URL cannot be found"},"error":{"type":"string","example":"Not Found"},"statusCode":{"type":"number","example":404}},"required":["message","error","statusCode"]},"InternalServerErrorResponse":{"type":"object","properties":{"message":{"type":"string","example":"The server encountered an unexpected condition that prevented it from fulfilling the request"},"error":{"type":"string","example":"InternalServerErrorException"},"statusCode":{"type":"number","example":500}},"required":["message","error","statusCode"]},"SendOOBOfferRequest":{"type":"object","properties":{"comment":{"type":"string","example":"comment","description":"An optional comment or note about the credential offer."},"credAttributes":{"type":"object","example":{"full_name":"martini"},"description":"Attributes of the credential being offered"},"credentialId":{"type":"number","example":1,"description":"The credential identifier which is being offered by the issuer to the holder"},"recipientEmail":{"type":"string","example":"johndoe@gmail.com","description":"The email address of the recipient who will receive the credential offer."},"givenName":{"type":"string","example":"john doe","description":"The full name of the recipient of the credential offer."},"messageProtocol":{"type":"string","enum":["AIP2_0","OID4VC"],"example":"AIP2_0","description":"The protocol in which the message should be sent and is specified by the sender of the message"},"credOfferId":{"type":"string","example":"EJTPB5648T","description":"A Unique identifier for the credential offer which is being sent by the issuer as their client request id"},"issuerDid":{"type":"string","example":"did:sov:A7dGU1kfMguWWse4","description":"The DID of the issuer offering the credential."},"holderDid":{"type":"string","example":"did:sov:HyKMopsFeFBNwAa4","description":"The DID of the holder receiving the credential."},"credAutoIssue":{"type":"boolean","example":false,"description":"if this is true than credential is auto issuance to holder."},"validFrom":{"format":"date-time","type":"string","example":"2020-12-03T12:19:52Z"},"validUntil":{"format":"date-time","type":"string","example":"2025-12-03T12:19:52Z"},"prevCredOfferId":{"type":"string","description":"Needed when previous credential needs to be revoked and send new offer.","example":"EJTPB5648T"}},"required":["comment","credAttributes","credentialId","recipientEmail","givenName","messageProtocol"]},"SendOOBResponse":{"type":"object","properties":{"responseDetails":{"type":"string","example":"Credential Offer successfully sent to johndoe@gmail.com","description":"Details of the response after sending the credential offer."},"credOfferStatus":{"type":"string","example":"offer-sent","description":"Status message indicating the result of sending the credential offer.","enum":["proposal-sent","proposal-received","offer-sent","offer-received","request-sent","request-received","credential-issued","credential-received","done","credential-revoked","abandoned"]},"credentialId":{"type":"number","example":1,"description":"The credential identifier which is being offered by the issuer to the holder"},"credOfferId":{"type":"string","example":"EJTPB5648T","description":"A Unique identifier for the credential offer which is being sent by the issuer as their client request id"}},"required":["responseDetails","credOfferStatus","credentialId","credOfferId"]},"SendOOBOfferResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"out-of-band offer send successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/SendOOBResponse"}},"required":["success","message","data"]},"PrepareQrOfferRequest":{"type":"object","properties":{"comment":{"type":"string","example":"comment","description":"A comment or note related to the credential offer."},"credAttributes":{"type":"object","example":{"full_name":"martini"},"description":"Attributes of the credential being offered"},"credentialId":{"type":"number","example":1,"description":"The credential identifier which is being offered by the issuer to the holder"},"credAutoIssue":{"type":"boolean","example":false,"description":"if this is true than credential is auto issuance to holder."},"messageProtocol":{"type":"string","enum":["AIP2_0","OID4VC"],"example":"AIP2_0","description":"The protocol in which the message should be sent and is specified by the sender of the message"},"issuerDid":{"type":"string","example":"did:sov:TRHJGKDFgkhgrkjh","description":"The DID (Decentralized Identifier) of the issuer."},"holderDid":{"type":"string","example":"did:sov:HyKMopsFeFBNwAa4","description":"Provide DID of the holder to whom the credential is being issued"},"credOfferId":{"type":"string","example":"EJTPB5648T","description":"A Unique identifier for the credential offer which is being sent by the issuer as their client request id"},"validFrom":{"format":"date-time","type":"string","example":"2020-12-03T12:19:52Z"},"validUntil":{"format":"date-time","type":"string","example":"2025-12-03T12:19:52Z"},"prevCredOfferId":{"type":"string","description":"Needed when previous credential needs to be revoked and send new offer.","example":"EJTPB5648T"}},"required":["comment","credAttributes","credentialId","messageProtocol"]},"SendPrepareOfferResponse":{"type":"object","properties":{"shortUrl":{"type":"string","example":"http://localhost:5001/url/3fa85f64-5717-4562-b3fc-2c963f66afa6","description":"The short URL for the credential offer."},"longUrl":{"type":"string","example":"http://localhost:9001?VRBd056YzJPREkwTkRJd05URTVPVFV3TnpZd09UVTBNelU1TXpVMk5UQTFNRGd4TXpFMk1ESTFPVFkwTlRZd09ETTJOemN6TkRnNE1EUTVOREkwTWpNMk5UYzVPREV4TlRBM01qa3hOelU1TWpFeE5URXdOellpWFYxOUxDQWlibTl1WTJVaU9pQWlPRGt5TlRjNU1UTTVNemMxTWpVeE1qQXpNell5TXpBNEluMD0ifX1dfX19XSwgInNlcnZpY2VzIjogW3siaWQiOiAiI2lubGluZSIsICJ0eXBlIjogImRpZC1jb21tdW5pY2F0aW9uIiwgInJlY2lwaWVudEtleXMiOiBbImRpZDprZXk6ejZNa3R0cXJuQWVxSDl6SENid0RoS0Jab0FucWNKOXczb2tQeXdtOUcyS3l5Sm9iI3o2TWt0dHFybkFlcUg5ekhDYndEaEtCWm9BbnFjSjl3M29rUHl3bTlHMkt5eUpvYiJdLCAic2VydmljZUVuZHBvaW50IjogImh0dHA6Ly91bmRlZmluZWQ6OTAwMSJ9XX0=","description":"The long URL for the credential offer, containing encrypted data."},"credOfferId":{"type":"string","example":"EJTPB5648T","description":"This is the ID of the credential offer sent by the issuer and the ID of the credential offer received by the holder."},"credOfferStatus":{"type":"string","example":"offer-sent","description":"Status message indicating the result of sending the credential offer.","enum":["proposal-sent","proposal-received","offer-sent","offer-received","request-sent","request-received","credential-issued","credential-received","done","credential-revoked","abandoned"]},"credentialId":{"type":"number","example":1,"description":"The credential identifier which is being offered by the issuer to the holder"}},"required":["shortUrl","longUrl","credOfferId","credOfferStatus","credentialId"]},"SendPrepareQROfferResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"prepare qr offer successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"readOnly":true,"allOf":[{"$ref":"#/components/schemas/SendPrepareOfferResponse"}]}},"required":["success","message","data"]},"SendOfferRequest":{"type":"object","properties":{"comment":{"type":"string","example":"comment","description":"An optional comment or note about the credential offer."},"contactId":{"type":"string","example":"fab6ae8c-3abb-4714-a6b1-a1e755083956","description":"The contact ID of the holder to whom the credential offer is being sent."},"credAttributes":{"type":"object","example":{"full_name":"martini"},"description":"Attributes of the credential being offered"},"credAutoIssue":{"type":"boolean","example":false,"description":"if this is true than credential is auto issuance to holder."},"credentialId":{"type":"number","example":1,"description":"The credential identifier which is being offered by the issuer to the holder"},"credOfferId":{"type":"string","example":"EJTPB5648T","description":"A Unique identifier for the credential offer which is being sent by the issuer as their client request id"},"issuerDid":{"type":"string","example":"did:sov:TRHJGKDFgkhgrkjh","description":"The DID of the issuer offering the credential."},"holderDid":{"type":"string","example":"did:sov:HyKMopsFeFBNwAa4","description":"The DID of the holder receiving the credential."},"validFrom":{"format":"date-time","type":"string","example":"2020-12-03T12:19:52Z"},"validUntil":{"format":"date-time","type":"string","example":"2025-12-03T12:19:52Z"},"prevCredOfferId":{"type":"string","description":"Needed when previous credential needs to be revoked and send new offer.","example":"EJTPB5648T"}},"required":["contactId","credAttributes","credentialId"]},"SendOfferRes":{"type":"object","properties":{"credOfferId":{"type":"string","example":"EJTPB5648T","description":"The ID of the credential offer that is being used to issue the credential."},"credOfferStatus":{"type":"string","example":"offer-sent","description":"Status message indicating the result of sending the credential offer.","enum":["proposal-sent","proposal-received","offer-sent","offer-received","request-sent","request-received","credential-issued","credential-received","done","credential-revoked","abandoned"]},"credentialId":{"type":"number","example":1,"description":"The credential identifier which is being offered by the issuer to the holder"}},"required":["credOfferId","credOfferStatus","credentialId"]},"SendOfferResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"Credential offer send successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/SendOfferRes"}},"required":["success","message","data"]},"IssueCredentialRequest":{"type":"object","properties":{"credOfferId":{"type":"string","example":"EJTPB5648T","description":"The ID of the credential offer that is being used to issue the credential."},"createClaim":{"type":"boolean","example":false,"description":"Flag indicating whether the claim is being created. Set to true to initiate the claim creation process."}},"required":["credOfferId","createClaim"]},"IssueCredentialResponseDetails":{"type":"object","properties":{"credOfferId":{"type":"string","example":"EJTPB5648T","description":"The unique identifier of the credential offer used during the issuance process."},"credOfferStatus":{"type":"string","example":"credential-issued","description":"Status message indicating the result of sending the credential offer.","enum":["proposal-sent","proposal-received","offer-sent","offer-received","request-sent","request-received","credential-issued","credential-received","done","credential-revoked","abandoned"]}},"required":["credOfferId","credOfferStatus"]},"IssueCredentialResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"Credential issued successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/IssueCredentialResponseDetails"}},"required":["success","message","data"]},"CredPreview":{"type":"object","properties":{"attributes":{"example":[{"name":"firstName","value":"john"},{"name":"lastName","value":"doe"}],"description":"The preview of attributes for the credential being offered.","type":"array","items":{"type":"string"}}},"required":["attributes"]},"SendOffer":{"type":"object","properties":{"credentialStatus":{"type":"string","example":"offer-sent","description":"The status of the credential offer sent."},"credFormat":{"type":"string","example":"ANONCREDS","description":"The format of the credential being offered."},"credPreview":{"description":"Preview of the credential being offered.","allOf":[{"$ref":"#/components/schemas/CredPreview"}]},"issuanceDate":{"format":"date-time","type":"string","example":"2024-05-31T11:32:42.083Z","description":"The issuance date of the credential."},"expirationDate":{"format":"date-time","type":"string","example":"2025-05-31T11:32:42.083Z","description":"The expiration date of the credential."},"credOfferId":{"type":"string","example":"EJTPB5648T","description":"The ID of the credential offer sent by the issuer and received by the holder."},"credentialId":{"type":"number","example":1,"description":"The credential identifier which is being offered by the issuer to the holder"},"credAutoIssue":{"type":"boolean","example":false,"description":"if this is true than credential is auto issuance to holder."}},"required":["credentialStatus","credFormat","credPreview","issuanceDate","expirationDate","credOfferId","credentialId","credAutoIssue"]},"PaginationMeta":{"type":"object","properties":{"totalItems":{"type":"number","example":100,"description":"The total number of items available."},"itemCount":{"type":"number","example":10,"description":"The number of items returned in the current response."},"itemsPerPage":{"type":"number","example":10,"description":"The number of items per page in the pagination."},"totalPages":{"type":"number","example":10,"description":"The total number of pages available based on the total items."},"currentPage":{"type":"number","example":1,"description":"The current page number being viewed."}},"required":["totalItems","itemCount","itemsPerPage","totalPages","currentPage"]},"GetIssueCredRecord":{"type":"object","properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/SendOffer"}},"meta":{"description":"The meta data corresponding to records returned by a GET method.","allOf":[{"$ref":"#/components/schemas/PaginationMeta"}]}},"required":["items","meta"]},"IssueCredentialRecordResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"credential record fetch successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/GetIssueCredRecord"}},"required":["success","message","data"]},"RevokeCredentialRequestDto":{"type":"object","properties":{"comment":{"type":"string","example":"The credential has been revoked and is no longer valid. This revocation may occur due to changes in the subject's status, expiration, or violations of the issuer's policies. Please contact the issuer for more details or to request reissuance if necessary.","description":"revoke credential comment to share with peer."},"credOfferId":{"type":"string","example":"EJTPB5648T","description":"revoke credential credOfferId that will revoke"},"notify":{"type":"boolean","example":false,"description":"if want to notify peer for credential is revoked that time pass as true"}},"required":["credOfferId"]},"RevokeCredentialResponseDetails":{"type":"object","properties":{"responseDetails":{"type":"string","example":"Credential has been revoked successfully."},"revokedDateTime":{"format":"date-time","type":"string","example":"2024-11-2516:02:21.677Z"},"credOfferId":{"type":"string","example":"EJTPB5648T","description":"The ID of the credential offer that is being used to issue the credential."},"credOfferStatus":{"type":"string","example":"offer-sent","description":"Status message indicating the result of sending the credential offer.","enum":["proposal-sent","proposal-received","offer-sent","offer-received","request-sent","request-received","credential-issued","credential-received","done","credential-revoked","abandoned"]},"credentialId":{"type":"number","example":1,"description":"The credential identifier which is being offered by the issuer to the holder"}},"required":["responseDetails","revokedDateTime","credOfferId","credOfferStatus","credentialId"]},"RevokeCredentialResponseDto":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"Credential revoked successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/RevokeCredentialResponseDetails"}},"required":["success","message","data"]}}}}