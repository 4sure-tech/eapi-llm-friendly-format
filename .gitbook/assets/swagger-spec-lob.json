{"openapi":"3.0.0","paths":{"/api/lob/register":{"post":{"operationId":"LobController_registerLob","summary":"The Register API is called to register your Line of Business (LOB) with Orbit Enterprise API ","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterLobRequest"}}}},"responses":{"201":{"description":"API successfully created new records","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterLobResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"409":{"description":"An object with the provided unique attributes already exists (eg. LOB with a specific name already exists)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConflictResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["lob"]}},"/api/lob/create":{"post":{"operationId":"LobController_createLob","summary":"The Create API is called to spin-up a distributed agent for your registered LOB","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateLobRequest"}}}},"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateLobResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["lob"],"security":[{"api-key":[]}]}}},"info":{"title":"Orbit Enterprise Lob API","description":"Orbit Enterprise Lob API's for handle lob","version":"1.0","contact":{}},"tags":[],"servers":[],"components":{"securitySchemes":{"api-key":{"type":"apiKey","in":"header","name":"api-key"}},"schemas":{"BadRequestResponse":{"type":"object","properties":{"message":{"type":"string","example":"A required parameter was missing in the request"},"error":{"type":"string","example":"Bad Request"},"statusCode":{"type":"number","example":400}},"required":["message","error","statusCode"]},"NotFoundErrorResponse":{"type":"object","properties":{"message":{"type":"string","example":"URL cannot be found"},"error":{"type":"string","example":"Not Found"},"statusCode":{"type":"number","example":404}},"required":["message","error","statusCode"]},"InternalServerErrorResponse":{"type":"object","properties":{"message":{"type":"string","example":"The server encountered an unexpected condition that prevented it from fulfilling the request"},"error":{"type":"string","example":"InternalServerErrorException"},"statusCode":{"type":"number","example":500}},"required":["message","error","statusCode"]},"EndorserDetails":{"type":"object","properties":{"endorserDid":{"type":"string","description":"The unique identifier for the external endorser, required if `endorserDid` is provided.","example":"did:sov:3cKEzFe9c42FL6TNQMoqUA"},"endorserName":{"type":"string","description":"The name of the external endorser. It is required if either `endorserDid` or `endorserInvitationURL` is provided.","example":"John Doe Endorser"}},"required":["endorserName"]},"RegisterLobRequest":{"type":"object","properties":{"lobDisplayName":{"type":"string","example":"john","description":"Name of the LOB Requestor"},"lobEmail":{"type":"string","example":"john@gmail.com","description":"Email address of LOB Requestor"},"lobOrganizationName":{"type":"string","example":"john org","description":"Name of the Organization registering the LOB"},"lobRole":{"type":"string","enum":["ISSUER","HOLDER","VERIFIER"],"description":"Specify the role of the LOB. Allowed Values: HOLDER, ISSUER, VERIFIER","example":["ISSUER"]},"lobTenancy":{"type":"string","enum":["SINGLE","MULTI_TENANT"],"description":"Specify if the agent is a single-wallet agent or if it supports multiple wallets. Allowed Values: SINGLE, MULTI_TENANT"},"didMethod":{"type":"string","enum":["did:web","did:sov"],"description":"Specify the DID Method of the LOB. Allowed Values: did:web, did:sov","example":"did:sov"},"lobProtocol":{"type":"string","enum":["AIP2_0","OID4VC"],"description":"Specify the message protocol that the LOB supports. Allowed Values: AIP2_0, OID4VC"},"writeLedgerId":{"type":"number","example":1,"description":"If the DID of the LOB is a did:sov, please specify the ledger on which the DID will be stored. Allowed value is 1 (points to BCovrin ledger)"},"credentialFormat":{"type":"string","enum":["ANONCRED","JSON_LD","vc+sd-jwt"],"description":"Specify the credential format that the LOB supports. Allowed Values: ANONCREDS, JSON_LD and SD_JWT"},"lobTrustUrl":{"type":"string","description":"The Trust URL associated with the Lob Issuer, providing a link to the issuer’s trust information.","example":"https://johndoeapi.trustregistry.nborbit.io"},"lobTrustAPIKey":{"type":"string","description":"The Trust URL associated with the Lob Issuer, providing a link to the issuer’s trust information.","example":"jk5NVeNc1ZfTGcCLfAWNGdY2Yd4YChbATpFRrmdERWg"},"lobExternalEndorser":{"type":"boolean","description":"Indicates whether the Lob Issuer has its own external endorser. If true, the `endorserDetails` field must also be provided."},"endorserDetails":{"description":"External endorser information. This is required when `lobExternalEndorser` is true.","allOf":[{"$ref":"#/components/schemas/EndorserDetails"}]}},"required":["lobDisplayName","lobEmail","lobOrganizationName","lobRole","lobTenancy","didMethod","lobProtocol","writeLedgerId","credentialFormat"]},"RegisterLob":{"type":"object","properties":{"responseDetails":{"type":"string","example":"Your request was successfully created. You will receive confirmation over registered email.","description":"Standardized responseDetails of the response body for series 200 response"}},"required":["responseDetails"]},"RegisterLobResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"LOB registered successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/RegisterLob"}},"required":["success","message","data"]},"ConflictResponse":{"type":"object","properties":{"message":{"type":"string","example":"An object with the provided unique attributes already exists (eg. LOB with a specific name already exists)"},"error":{"type":"string","example":"Conflict"},"statusCode":{"type":"number","example":409}},"required":["message","error","statusCode"]},"CreateLobRequest":{"type":"object","properties":{"transactionId":{"type":"string","example":"c718dd54-8884-4f5d-9732-eecb35d5d33f","description":"The ID provided via email when you registered your LOB"}},"required":["transactionId"]},"CreateLob":{"type":"object","properties":{"publicDID":{"type":"string","example":"did:sov:LjgpST2rjsoxYegQDRm7EL","description":"The public Decentralized Identifier (DID) associated with the LOB."},"responseDetails":{"type":"string","example":"Agent is created successfully. The public DID of the will created once the endorser is accepted the connection request.","description":"Agent is created successfully. The public DID of the will created once the endorser is accepted the connection request."}},"required":["publicDID","responseDetails"]},"CreateLobResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"LOB wallet created successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/CreateLob"}},"required":["success","message","data"]},"UnauthorizedResponse":{"type":"object","properties":{"message":{"type":"string","example":"Invalid API Key included in the request"},"error":{"type":"string","example":"UnauthorizedException"},"statusCode":{"type":"number","example":401}},"required":["message","error","statusCode"]}}}}