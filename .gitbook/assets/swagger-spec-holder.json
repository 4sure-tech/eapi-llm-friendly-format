{"openapi":"3.0.0","paths":{"/health":{"get":{"operationId":"HealthController_selfCheck","summary":"this api check application running health","parameters":[],"responses":{"200":{"description":"The Health Check is successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"ok"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"error":{"type":"object","example":{},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true}}}}}}},"503":{"description":"The Health Check is not successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"error":{"type":"object","example":{"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"},"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true}}}}}}}},"tags":["health"]}},"/api/lob/{lob_id}/credential-offers":{"get":{"operationId":"CredentialController_credentialOffers","summary":"Retrieve all Credential offers received from Issuers","parameters":[{"name":"page","required":false,"in":"query","example":1,"schema":{}},{"name":"limit","required":false,"in":"query","example":10,"schema":{}},{"name":"search","required":false,"in":"query","schema":{}},{"name":"state","required":false,"in":"query","schema":{"enum":["proposal-sent","offer-received","request-sent","credential-received","done","abandoned"],"type":"string"}},{"name":"lob_id","required":true,"in":"path","description":"This is the ID for the LOB","schema":{}}],"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CredentialOfferResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["credential"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/offer-decision":{"post":{"operationId":"CredentialController_acceptOrDeclineOffer","summary":"Accept or decline a Credential offer","parameters":[{"name":"lob_id","required":true,"in":"path","description":"This is the ID for the LOB","schema":{}}],"requestBody":{"required":false,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AcceptOrDeclineCredRequest"}}}},"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AcceptOrDeclineCredResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["credential"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/store-credential":{"post":{"operationId":"CredentialController_storeCredential","summary":"Store a Credential","parameters":[{"name":"lob_id","required":true,"in":"path","description":"This is the ID for the LOB","schema":{}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StoreCredentialRequest"}}}},"responses":{"200":{"description":"API successfully created new records","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StoreCredentialResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["credential"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/wallet/credentials":{"get":{"operationId":"CredentialController_holderWalletCredential","summary":"Retrieve all Credentials stored in the LOB's wallet","parameters":[{"name":"limit","required":false,"in":"query","example":10,"schema":{}},{"name":"page","required":false,"in":"query","example":1,"schema":{}},{"name":"lob_id","required":true,"in":"path","description":"This is the ID for the LOB","schema":{}}],"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CredentialResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["credential"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/credential-offer":{"delete":{"operationId":"CredentialController_deleteCredentialOffer","summary":"Delete a Credential offer","parameters":[{"name":"lob_id","required":true,"in":"path","description":"This is the ID for the LOB","schema":{}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteCredentialOfferRequest"}}}},"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteCredOfferResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["credential"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/wallet/credential":{"delete":{"operationId":"CredentialController_deleteCredentialOfferWallet","summary":"Delete a stored Credential","parameters":[{"name":"lob_id","required":true,"in":"path","description":"This is the ID for the LOB","schema":{}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteWalletCredentialRequest"}}}},"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteCredWalletResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["credential"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/proof-requests":{"get":{"operationId":"ProofController_getPresentProofRequest","summary":"Retrieve all proof requests","parameters":[{"name":"state","required":false,"in":"query","schema":{"enum":["proposal-sent","proposal-received","request-sent","request-received","presentation-sent","presentation-received","done","abandoned","deleted","verified"],"type":"string"}},{"name":"search","required":false,"in":"query","schema":{}},{"name":"limit","required":false,"in":"query","example":10,"schema":{}},{"name":"page","required":false,"in":"query","example":1,"schema":{}},{"name":"lob_id","required":true,"in":"path","description":"This is the ID for the LOB","schema":{}}],"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetProofRequestResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["proof-request"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/{proof_id}/matching-credentials/{proof_request_id}":{"get":{"operationId":"ProofController_getWalletCredential","summary":"Retrieve matching Credentials for a proof request","parameters":[{"name":"proof_id","required":true,"in":"path","schema":{"type":"number"}},{"name":"lob_id","required":true,"in":"path","description":"This is the ID for the LOB","schema":{}}],"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProofRequestCredentialResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["proof-request"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/send-presentation":{"post":{"operationId":"ProofController_sendPresentation","summary":"Send Credential presentation","parameters":[{"name":"lob_id","required":true,"in":"path","description":"This is the ID for the LOB","schema":{}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendPresentationRequest"}}}},"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendPresentationRequestResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["proof-request"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/proof-request":{"delete":{"operationId":"ProofController_deleteProofRequest","summary":"Delete a proof request","parameters":[{"name":"lob_id","required":true,"in":"path","description":"This is the ID for the LOB","schema":{}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteProofBodyRequest"}}}},"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteProofResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["proof-request"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/decline-proof":{"post":{"operationId":"ProofController_declineProofRequest","summary":"Decline a proof request","parameters":[{"name":"lob_id","required":true,"in":"path","description":"This is the ID for the LOB","schema":{}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeclineProofRequest"}}}},"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeclineProofResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["proof-request"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/oob-details":{"post":{"operationId":"OobController_acceptOOB","summary":"Retrieve Out-Of-Band message details","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AcceptOobRequest"}}}},"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OutOfBandAcceptResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["out-of-band"],"security":[{"api-key":[]}]}}},"info":{"title":"Orbit Holder API","description":"Holder API is a SAAS service that Holder entity uses to credential offers to peer entities.","version":"1.0","contact":{}},"tags":[],"servers":[],"components":{"securitySchemes":{"api-key":{"type":"apiKey","in":"header","name":"api-key"}},"schemas":{"BadRequestResponse":{"type":"object","properties":{"message":{"type":"string","example":"A required parameter was missing in the request"},"error":{"type":"string","example":"Bad Request"},"statusCode":{"type":"number","example":400}},"required":["message","error","statusCode"]},"UnauthorizedResponse":{"type":"object","properties":{"message":{"type":"string","example":"Invalid API Key included in the request"},"error":{"type":"string","example":"UnauthorizedException"},"statusCode":{"type":"number","example":401}},"required":["message","error","statusCode"]},"NotFoundErrorResponse":{"type":"object","properties":{"message":{"type":"string","example":"URL cannot be found"},"error":{"type":"string","example":"Not Found"},"statusCode":{"type":"number","example":404}},"required":["message","error","statusCode"]},"InternalServerErrorResponse":{"type":"object","properties":{"message":{"type":"string","example":"The server encountered an unexpected condition that prevented it from fulfilling the request"},"error":{"type":"string","example":"InternalServerErrorException"},"statusCode":{"type":"number","example":500}},"required":["message","error","statusCode"]},"CredentialPreviewAtrributes":{"type":"object","properties":{"name":{"type":"string","example":"full_name","description":"The name or attribute of the credential."},"value":{"type":"string","example":"John Doe","description":"The value associated with the credential attribute."}},"required":["name","value"]},"CredentialPreview":{"type":"object","properties":{"attributes":{"type":"array","items":{"$ref":"#/components/schemas/CredentialPreviewAtrributes"}}},"required":["attributes"]},"CredentialOfferData":{"type":"object","properties":{"issuanceId":{"type":"number","example":1,"description":"The unique identifier for the credential issuance process."},"credentialStatus":{"type":"string","example":"offer-received","description":"The current status of the credential offer."},"issuerDid":{"type":"string","example":"did:sov:7ordz2rHZ31iX9R25jjcMY","description":"The DID of the issuer of the credential offer."},"issuanceDate":{"format":"date-time","type":"string","example":"2024-08-06","description":"The date when the credential offer was issued."},"credDefId":{"type":"string","example":"7ordz2rHZ31iX9R25jjcMY:3:CL:1505846:DL_cred","description":"The credential definition ID for the offer."},"schemaLedgerId":{"type":"string","example":"PQ3H8NiUBguTivwkJRuHGC:2:Driving_license_New:6.0","description":"The schema ledger ID associated with the credential offer."},"credentialPreview":{"description":"Preview of the credential data being offered.","allOf":[{"$ref":"#/components/schemas/CredentialPreview"}]},"comments":{"type":"string","example":"A comment","description":"A comment or note about the credential offer."},"credFormat":{"type":"string","example":"Hyperledger Indy Credential Abstract","description":"The format of the credential being offered."},"messageProtocol":{"type":"string","example":"AIP2_0","description":"The protocol message type used for the credential offer."},"signature":{"type":"string","example":"Ed25519Signature2018","description":"The signature algorithm used to sign the credential offer."},"shortUrl":{"type":"string","example":"http://100.28.204.79:5004/url/c41e9706-aee1-4397-bb91-ab027cf08a6d","description":"A short URL to access the credential offer."},"longUrl":{"type":"string","example":"http://100.28.204.79:5004?oob=eyhchc41e9706aee14397...bb91ab027cf08a6d","description":"A long URL to access the credential offer."},"recipientEmail":{"type":"string","example":"john@example.com","description":"Optional email of the recipient for the credential offer."},"recipientName":{"type":"string","example":"john","description":"Optional name of the recipient for the credential offer."},"declineReason":{"type":"string","example":"Data is incorrect","description":"A reason for declining the credential offer."},"errorMessage":{"type":"string","example":"error message","description":"An error message for an issue with the credential offer."},"issuanceType":{"type":"string","example":"DID_EXCHANGE","description":"The type of issuance process being used for the credential offer."},"authorityStatement":{"type":"string","example":"offer-trusted","description":"The authority statement indicating the level of trust for the credential offer."},"createdAt":{"format":"date-time","type":"string","example":"2024-08-06T16:02:15.484Z","description":"The timestamp when the credential offer was created."},"updatedAt":{"format":"date-time","type":"string","example":"2024-08-06T16:02:15.484Z","description":"The timestamp when the credential offer was last updated."}},"required":["issuanceId","credentialStatus","issuerDid","issuanceDate","credDefId","schemaLedgerId","credentialPreview","comments","credFormat","messageProtocol","signature","shortUrl","issuanceType","authorityStatement","createdAt","updatedAt"]},"PaginationMeta":{"type":"object","properties":{"totalItems":{"type":"number","example":100,"description":"Total number of items available across all pages."},"itemCount":{"type":"number","example":10,"description":"Number of items returned on the current page."},"itemsPerPage":{"type":"number","example":10,"description":"Number of items to display per page."},"totalPages":{"type":"number","example":10,"description":"Total number of pages available based on the total items and items per page."},"currentPage":{"type":"number","example":1,"description":"The current page number in the paginated response."}},"required":["itemCount","itemsPerPage","currentPage"]},"CredentialOffer":{"type":"object","properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/CredentialOfferData"}},"meta":{"$ref":"#/components/schemas/PaginationMeta"}},"required":["items","meta"]},"CredentialOfferResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"Credential Offers fetched successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/CredentialOffer"}},"required":["success","message","data"]},"AcceptOrDeclineCredRequest":{"type":"object","properties":{"credOfferId":{"type":"number","description":"This is the ID of the credential offer sent by the issuer and the ID of the credential offer received by the holder. The format of this will help the client know whether it is a oob-type.","example":1},"consent":{"type":"string","example":"Accept","description":"This is an enum to accept or decline offers or proposals or connections received by the recipient. The enum values are (Accept, Decline).","enum":["Accept","Decline"]},"declineReason":{"type":"string","example":"decline offer reason","description":"Reason provided by the recipient when declining the offer."},"retainConnection":{"type":"boolean","example":true,"description":"Indicates whether to retain the connection after declining/accepting the offer."}},"required":["credOfferId","consent"]},"AcceptOrDeclineCred":{"type":"object","properties":{"responseDetails":{"type":"string","example":"Credential offer accepted successfully.","description":"The message indicating the result of the credential offer processing, e.g., success or failure."}},"required":["responseDetails"]},"AcceptOrDeclineCredResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Indicates whether the request was successful. A true value indicates success."},"message":{"type":"string","example":"Credential offer processed successfully","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/AcceptOrDeclineCred"}},"required":["success","message","data"]},"StoreCredentialRequest":{"type":"object","properties":{"credOfferId":{"type":"number","example":1,"description":"This is the ID of the credential offer sent by the issuer and the ID of the credential offer received by the holder. The format of this will help the client know whether it is a oob-type."},"createClaim":{"type":"boolean","example":false,"description":"Flag indicating whether the claim is being created. Set to true to initiate the claim creation process."}},"required":["credOfferId","createClaim"]},"StoreCredential":{"type":"object","properties":{"responseDetails":{"type":"string","example":"Credential record (6c8af2c2-5aa5-4353-abdf-4a291d0a6d9b) stored successfully"}},"required":["responseDetails"]},"StoreCredentialResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"Credential stored successfully","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/StoreCredential"}},"required":["success","message","data"]},"Credential":{"type":"object","properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/CredentialOfferData"}},"meta":{"$ref":"#/components/schemas/PaginationMeta"}},"required":["items","meta"]},"CredentialResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"Credential Offers fetched successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"description":"The data related to the credential offer.","allOf":[{"$ref":"#/components/schemas/Credential"}]}},"required":["success","message","data"]},"DeleteCredentialOfferRequest":{"type":"object","properties":{"credOfferId":{"type":"number","example":1,"description":"This is the ID of the credential offer sent by the issuer and the ID of the credential offer received by the holder. The format of this will help the client know whether it is a oob-type."}},"required":["credOfferId"]},"DeleteCredOffer":{"type":"object","properties":{"responseDetails":{"type":"string","example":"credential offer deleted successfully.","description":"Message indicating that the credential offer has been successfully deleted."}},"required":["responseDetails"]},"DeleteCredOfferResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Indicates whether the request was successful. A true value means the credential offer was deleted successfully."},"message":{"type":"string","example":"credential offer deleted successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/DeleteCredOffer"}},"required":["success","message","data"]},"DeleteWalletCredentialRequest":{"type":"object","properties":{"credentialId":{"type":"number","example":1,"description":"The credential identifier which is being offered by the issuer to the holder"}},"required":["credentialId"]},"DeleteCredWallet":{"type":"object","properties":{"responseDetails":{"type":"string","example":"Credential deleted successfully from wallet.","description":"The message confirming that the credential was successfully deleted from the wallet."}},"required":["responseDetails"]},"DeleteCredWalletResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"Credential deleted successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/DeleteCredWallet"}},"required":["success","message","data"]},"PresentationRequest":{"type":"object","properties":{"name":{"type":"string","example":"bcovrin proof define","description":"The name of the presentation request."},"requestedAttributes":{"type":"object","example":{"names":["full_name","email_address"],"restrictions":[{"issuerDID":"QtXHpJjC1v19N1hzyd61PD","credDefId":"QtXHpJjC1v19N1hzyd61PD:3:CL:850342:Test_Email_Card_1"}]},"description":"The requested attributes for the proof presentation."},"requestedPredicates":{"example":[{"name":"age","predicateType":"<","predicateValue":0,"restrictions":[{"issuerDID":"QtXHpJjC1v19N1hzyd61PD","credDefId":"QtXHpJjC1v19N1hzyd61PD:3:CL:850342:Test_Email_Card_1"}]}],"description":"The requested predicates for the proof presentation, including restrictions.","type":"array","items":{"type":"array"}}},"required":["name","requestedAttributes","requestedPredicates"]},"ProofRequest":{"type":"object","properties":{"id":{"type":"number","example":1,"description":"The unique ID for the proof request."},"presentationInvitationUrl":{"type":"string","example":null,"description":"The URL for the presentation invitation. This will be used to send an invitation for the presentation."},"presentationRequest":{"description":"The details of the presentation request, including requested attributes and predicates.","allOf":[{"$ref":"#/components/schemas/PresentationRequest"}]},"presentationInvitationShortUrl":{"type":"string","example":"http://localhost:5004/url/4d722678-bd86-4c10-94ae-fcc03da191f9","description":"A short URL for the presentation invitation."},"presentationStatus":{"type":"string","example":"request-received","description":"The current status of the proof request"},"declineReason":{"type":"string","example":"","description":"Decline reason"},"errorMessage":{"type":"string","example":"error message","description":"error message if any issue occurred with the proof request."},"createdAt":{"type":"string","example":"2024-07-17T12:37:33.954Z","description":"The timestamp when the proof request was created."},"updatedAt":{"type":"string","example":"2024-07-17T12:37:33.954Z","description":"The timestamp when the proof request was last updated."}},"required":["id","presentationInvitationUrl","presentationRequest","presentationInvitationShortUrl","presentationStatus","createdAt","updatedAt"]},"ProofRequestRecord":{"type":"object","properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/ProofRequest"}},"meta":{"$ref":"#/components/schemas/PaginationMeta"}},"required":["items","meta"]},"GetProofRequestResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"proof request fetch successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/ProofRequestRecord"}},"required":["success","message","data"]},"CredentialAttributes":{"type":"object","properties":{}},"ProofRequestCredentialData":{"type":"object","properties":{"credDefId":{"type":"string","example":"PYCggLQx3nLkyptxFEY6qn:3:CL:2074864:pancard","description":"Credential Definition ID, identifying the specific credential definition."},"schemaLedgerId":{"type":"string","example":"PYCggLQx3nLkyptxFEY6qn:2:pancard:1.0","description":"Schema Ledger ID, identifying the schema of the credential."},"credentialId":{"type":"number","example":1,"description":"The unique ID of the credential in the database."},"credentialReferentId":{"type":"string","example":"6c8af2c2-5aa5-4353-abdf-4a291d0a6d9b","description":"The referent ID, which is a unique identifier for this credential."},"credentialStatus":{"type":"string","example":"done","description":"The current status of the credential."},"attributes":{"example":{"full_name":"John Doe","email":"john@example.com"},"description":"The attributes associated with the credential, such as full name and email.","allOf":[{"$ref":"#/components/schemas/CredentialAttributes"}]}},"required":["credDefId","schemaLedgerId","credentialId","credentialReferentId","credentialStatus","attributes"]},"ProofRequestCredential":{"type":"object","properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/ProofRequestCredentialData"}},"meta":{"$ref":"#/components/schemas/PaginationMeta"}},"required":["items","meta"]},"ProofRequestCredentialResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"wallet credential record found successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"type":"array","items":{"$ref":"#/components/schemas/ProofRequestCredential"}}},"required":["success","message","data"]},"SendPresentationRequest":{"type":"object","properties":{"proofId":{"type":"number","example":1,"description":"This is the ID for the proof request received by the holder and the proof request sent by the verifier"},"createClaim":{"type":"boolean","example":false,"description":"Flag indicating whether the claim is being created. Set to true to initiate the claim creation process."},"requestedAttributes":{"type":"object","example":{"QtXHpJjC1v19N1hzyd61PD:3:CL:850342:address_card":1,"QtXHpJjC1v19N1hzyd61PD:3:CL:850342:Test_Email_Card_1":2},"description":"Requested attributes in the presentation request."},"requestedPredicates":{"type":"object","example":{"QtXHpJjC1v19N1hzyd61PD:3:CL:850342:address_card":2,"QtXHpJjC1v19N1hzyd61PD:3:CL:850342:Test_Email_Card_1":2},"description":"Requested predicates in the presentation request."},"selfAttestedAttributes":{"type":"object","example":{},"description":"Self-attested attributes in the presentation request."}},"required":["proofId","createClaim","requestedAttributes","requestedPredicates"]},"PresentationSend":{"type":"object","properties":{"responseDetails":{"type":"string","example":"Presentation sent successfully.","description":"A message indicating the successful sending of the presentation."}},"required":["responseDetails"]},"SendPresentationRequestResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"Presentation processed successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/PresentationSend"}},"required":["success","message","data"]},"DeleteProofBodyRequest":{"type":"object","properties":{"proofId":{"type":"number","example":1,"description":"This is the ID for the proof request received by the holder and the proof request sent by the verifier"}},"required":["proofId"]},"DeleteProof":{"type":"object","properties":{"proofId":{"type":"number","example":1,"description":"The unique ID of the proof that was deleted. This ID identifies the specific proof that has been removed."},"status":{"type":"string","example":"deleted","description":"The status of the proof deletion request. It indicates whether the proof was successfully deleted or not."}},"required":["proofId","status"]},"DeleteProofResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"Proof record deleted successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/DeleteProof"}},"required":["success","message","data"]},"DeclineProofRequest":{"type":"object","properties":{"proofId":{"type":"number","example":1,"description":"This is the ID for the proof request received by the holder and the proof request sent by the verifier"},"declineReason":{"type":"string","example":"No trust","description":"A reason for declining the proof request. This helps to provide context for the decline decision."}},"required":["proofId","declineReason"]},"DeclineProof":{"type":"object","properties":{"responseDetails":{"type":"string","example":"Proof Request has been declined.","description":"A standardized response indicating that the proof request was successfully declined by the holder."}},"required":["responseDetails"]},"DeclineProofResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"Proof Request processed successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/DeclineProof"}},"required":["success","message","data"]},"AcceptOobRequest":{"type":"object","properties":{"url":{"type":"string","example":"http://localhost:5003/url/1a5b1427-7715-4fad-84c8-129cf04af1e7","description":"The URL for the out-of-band invitation to accept."}},"required":["url"]},"OObAccept":{"type":"object","properties":{"givenName":{"type":"string","example":"John Doe","description":"The label for the given name"},"messageProtocol":{"type":"string","description":"AIP message protocol","example":"ExampleProtocol"},"proofRequestId":{"type":"number","description":"Proof request ID, if applicable. Provide either this or credOfferId.","example":1},"credOfferId":{"type":"number","description":"Credential offer ID, if applicable. Provide either this or proofRequestId.","example":1},"connectionLess":{"type":"string","example":"Yes","description":"If the 'ConnectionLess' value is 'Yes', then the Aries agent should perform the DID exchange without establishing a connection. If the value is 'No', then the connection should be established before performing the DID exchange."}},"required":["givenName","messageProtocol","connectionLess"]},"OutOfBandAcceptResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"out-of-band invitation accept successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/OObAccept"}},"required":["success","message","data"]}}}}