{"openapi":"3.0.0","paths":{"/api/lob/{lob_id}/did-exchange/invitation":{"post":{"operationId":"DidExchangeController_sendInvitation","summary":"A DIDExchange based invitation is sent to the client. The invitation is prepared based on either AIP 1.0 or AIP 2.0 protocol. ","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DIDExchangeRequest"}}}},"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DIDExchangeSendInvitationResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["did-exchange"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/oob/prepare-url-invitation":{"post":{"operationId":"OutOfBandController_oobPrepare","summary":"OOBInvitation is prepared as a QR Code and returned to the client. The invitation is prepared based on either AIP 1.0 or AIP 2.0 protocol. ","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PrepareOOBRequest"}}}},"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PrepareOOBResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"security":[{"api-key":[]}],"tags":["out-of-band"]}},"/api/lob/{lob_id}/oob/invitation":{"post":{"operationId":"OutOfBandController_sendOobInvitation","summary":"OOBInvitation sends an email invitation to the prepared based on either AIP 1.0 or AIP 2.0 protocol. ","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendOobInvitationRequest"}}}},"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendOOBResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"security":[{"api-key":[]}],"tags":["out-of-band"]}},"/api/lob/{lob_id}/oob/details":{"post":{"operationId":"OutOfBandController_getOobInvitationDetails","summary":"The oob/details API is called to provide the client the details of the oob invitation received by the client.","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OOBInvitationDetailsRequest"}}}},"responses":{"201":{"description":"API successfully created new records","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OOBInvitationDetailsResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"security":[{"api-key":[]}],"tags":["out-of-band"]}},"/api/lob/{lob_id}/accept-invitation":{"post":{"operationId":"ConnectionsController_acceptConnection","summary":"An invitation is accepted. The invitation is prepared based on either AIP 1.0 or AIP 2.0 protocol. ","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AcceptConnectionRequest"}}}},"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DIDExchangeResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"security":[{"api-key":[]}],"tags":["invitations"]}},"/api/lob/{lob_id}/pending-connections":{"get":{"operationId":"ConnectionsController_getPendingConnections","summary":"Returns all the pending connection and saved drafts with their most recent state that have been invited and all the connection requests that have been received from the peers along with the date and time the most recent state. The pending connections are listed in a chronological order (the invitation sent or invitation recd whose state was created / updated most recently is at the top of the list).","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{"type":"string"}},{"name":"state","required":false,"in":"query","schema":{"enum":["none","request","active","error","completed","deleted"],"type":"string"}},{"name":"search","required":false,"in":"query","schema":{"type":"string"}},{"name":"page","required":false,"in":"query","schema":{"type":"string"}},{"name":"limit","required":false,"in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PendingConnectionResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"security":[{"api-key":[]}],"tags":["invitations"]}},"/api/lob/{lob_id}/contact/{contact_id}":{"get":{"operationId":"ConnectionsController_getContactById","summary":"Return a single connection invitation.","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{"type":"string"}},{"name":"contact_id","required":true,"in":"path","schema":{"type":"number"}}],"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContactDetails"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"security":[{"api-key":[]}],"tags":["contacts"]}},"/api/lob/{lob_id}/contacts":{"get":{"operationId":"ConnectionsController_getContacts","summary":"Returns all the connection (contacts) which were accepted by the peer (invitee) and all the connections which have been accepted by the LOB with the date and time the\nconnection was established. The connection (contacts) are listed in alphabetical order (Given Name).","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{"type":"string"}},{"name":"items_per_page","required":false,"in":"query","schema":{"type":"string"}},{"name":"page","required":false,"in":"query","schema":{"type":"string"}},{"name":"search","required":false,"in":"query","schema":{"type":"string"}},{"name":"state","required":false,"in":"query","schema":{"enum":["none","request","active","error","completed","deleted"],"type":"string"}},{"name":"email","required":false,"in":"query","schema":{"type":"string"}},{"name":"given_name","required":false,"in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PendingContactList"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"security":[{"api-key":[]}],"tags":["contacts"]}},"/api/lob/{lob_id}/pending-connection":{"delete":{"operationId":"ConnectionsController_deleteConnection","summary":"Delete API deletes a pending connection or a draft invitation.","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InvitationDeleteRequest"}}}},"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteInvitationResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"security":[{"api-key":[]}],"tags":["invitations"]}},"/api/lob/{lob_id}/contact":{"delete":{"operationId":"ConnectionsController_deleteContact","summary":"DeleteContact API deletes a contact and the associated connection with the peer.","parameters":[{"name":"lob_id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContactDeleteRequest"}}}},"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteContactResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"security":[{"api-key":[]}],"tags":["contacts"]}}},"info":{"title":"Orbit Enterprise Connection","description":"Connection API is a SAAS service that entity uses to connect with peer entities. Connection API is applicable only where both parties support DIDComm (AIP 1.0 or AIP 2.0) protocol.","version":"1.0","contact":{}},"tags":[],"servers":[],"components":{"securitySchemes":{"api-key":{"type":"apiKey","in":"header","name":"api-key"}},"schemas":{"BadRequestResponse":{"type":"object","properties":{"message":{"type":"string","example":"A required parameter was missing in the request"},"error":{"type":"string","example":"Bad Request"},"statusCode":{"type":"number","example":400}},"required":["message","error","statusCode"]},"UnauthorizedResponse":{"type":"object","properties":{"message":{"type":"string","example":"Invalid API Key included in the request"},"error":{"type":"string","example":"UnauthorizedException"},"statusCode":{"type":"number","example":401}},"required":["message","error","statusCode"]},"NotFoundErrorResponse":{"type":"object","properties":{"message":{"type":"string","example":"URL cannot be found"},"error":{"type":"string","example":"Not Found"},"statusCode":{"type":"number","example":404}},"required":["message","error","statusCode"]},"InternalServerErrorResponse":{"type":"object","properties":{"message":{"type":"string","example":"The server encountered an unexpected condition that prevented it from fulfilling the request"},"error":{"type":"string","example":"InternalServerErrorException"},"statusCode":{"type":"number","example":500}},"required":["message","error","statusCode"]},"DIDExchangeRequest":{"type":"object","properties":{"givenName":{"type":"string","example":"John Doe","description":"The name of the individual initiating the DID exchange request."},"publicDID":{"type":"string","example":"did:sov:TRHJGKDFgkhgrkjh","description":"The public DID of the requester to be used for the DID exchange."}},"required":["givenName","publicDID"]},"DidExchange":{"type":"object","properties":{"givenName":{"type":"string","example":"John Doe","description":"The name of the individual involved in the DID exchange."},"messageProtocol":{"type":"string","example":"AIP2_0","description":"The protocol version used for the DID exchange. For example, AIP 2.0."},"publicDID":{"type":"string","example":"did:peer:WgWxqztrNooG92RXvxSTWv","description":"The public DID associated with the exchange participant."}},"required":["givenName","messageProtocol","publicDID"]},"DIDExchangeSendInvitationResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"did-exchange connection request send successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/DidExchange"}},"required":["success","message","data"]},"PrepareOOBRequest":{"type":"object","properties":{"givenName":{"type":"string","example":"bob","description":"The name or label the invitee gives to the inviter / recipient when invitee sends the oob invitation, oob credential offer, oob proof request or when the recipient accepts the oob invitation it gives to the oob invitation invitee"},"messageProtocol":{"type":"string","example":"AIP2_0","enum":["AIP2_0","OID4VC"],"description":"The protocol in which the message should be sent and is specified by the sender of the message"}},"required":["givenName","messageProtocol"]},"PrepareOOBResponseBody":{"type":"object","properties":{"state":{"type":"string","example":"initial","description":"Specify the status filter criteria based on which the records are retrieved (for example “proposal-sent”). The status is specific to what records are being retrieved (for example credential offers or proof request, etc).\n\nstate also returns the state of invitation or credential exchange interaction with the peer identity."},"longUrl":{"type":"string","description":"The URL can be of three types:\n1. long invitation URL that the inviter can send to the invitee\n2. long credential offer URL that issuer can send to the recipient\n3. long proof request URL that verifier can send to the holder","example":"http://192.168.1.10:9013?oob=eyJAdHlwZSI6ICJodHRwczovL2RpZGNvbW0ub3JnL291dC1vZi1iYW5kLzEuMS9pbnZpdGF0aW9uIiwgIkBpZCI6ICI0MGE3MjNhNS03MWU0LTRhNTgtYmY1YS05MTVhZDY4NDNhNDIiLCAibGFiZWwiOiAiYnJpaiBvcmcgQWdlbnQiLCAiaGFuZHNoYWtlX3Byb3RvY29scyI6IFsiaHR0cHM6Ly9kaWRjb21tLm9yZy9kaWRleGNoYW5nZS8xLjAiXSwgImFjY2VwdCI6IFsiZGlkY29tbS9haXAxIl0sICJzZXJ2aWNlcyI6IFt7ImlkIjogIiNpbmxpbmUiLCAidHlwZSI6ICJkaWQtY29tbXVuaWNhdGlvbiIsICJyZWNpcGllbnRLZXlzIjogWyJkaWQ6a2V5Ono2TWtrRWNDVkU2RG1tdThUTXRVUjhvWng2cnZTc3NiQUdFYmRxeFZ3TG9jR0t6NiN6Nk1ra0VjQ1ZFNkRtbXU4VE10VVI4b1p4NnJ2U3NzYkFHRWJkcXhWd0xvY0dLejYiXSwgInNlcnZpY2VFbmRwb2ludCI6ICJodHRwOi8vMTkyLjE2OC4xLjEwOjkwMTMifV19"},"shortUrl":{"type":"string","description":"The URL can be of three types:\n1. short invitation URL that the inviter can send to the invitee\n2. short credential offer URL that issuer can send to the recipient\n3. short proof request URL that verifier can send to the holder","example":"http://localhost:5001/url/40a723a5-71e4-4a58-bf5a-915ad6843a42"}},"required":["state","longUrl","shortUrl"]},"PrepareOOBResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"Out-Of-Band invitation prepared successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"description":"Response details","allOf":[{"$ref":"#/components/schemas/PrepareOOBResponseBody"}]}},"required":["success","message","data"]},"SendOobInvitationRequest":{"type":"object","properties":{"givenName":{"type":"string","example":"bob","description":"The name or label the invitee gives to the inviter / recipient when invitee sends the oob invitation, oob credential offer, oob proof request or when the recipient accepts the oob invitation it gives to the oob invitation invitee"},"messageProtocol":{"type":"string","example":"AIP2_0","enum":["AIP2_0","OID4VC"],"description":"The protocol in which the message should be sent and is specified by the sender of the message"},"recipientEmail":{"type":"string","example":"bob@yopmail.com","description":"This email is used to send oob invitation, oob credential offer and oob proof request."}},"required":["givenName","messageProtocol","recipientEmail"]},"SendOOB":{"type":"object","properties":{"responseDetails":{"type":"string","example":"Mail successfully sent to john@yopmail.com"}},"required":["responseDetails"]},"SendOOBResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"out-of-band invitation send successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"description":"Response details","allOf":[{"$ref":"#/components/schemas/SendOOB"}]}},"required":["success","message","data"]},"OOBInvitationDetailsRequest":{"type":"object","properties":{"longUrl":{"type":"string","description":"The URL can be of three types:\n1. long invitation URL that the inviter can send to the invitee\n2. long credential offer URL that issuer can send to the recipient\n3. long proof request URL that verifier can send to the holder","example":"http://192.168.1.10:9013?oob=eyJAdHlwZSI6ICJodHRwczovL2RpZGNvbW0ub3JnL291dC1vZi1iYW5kLzEuMS9pbnZpdGF0aW9uIiwgIkBpZCI6ICI0MGE3MjNhNS03MWU0LTRhNTgtYmY1YS05MTVhZDY4NDNhNDIiLCAibGFiZWwiOiAiYnJpaiBvcmcgQWdlbnQiLCAiaGFuZHNoYWtlX3Byb3RvY29scyI6IFsiaHR0cHM6Ly9kaWRjb21tLm9yZy9kaWRleGNoYW5nZS8xLjAiXSwgImFjY2VwdCI6IFsiZGlkY29tbS9haXAxIl0sICJzZXJ2aWNlcyI6IFt7ImlkIjogIiNpbmxpbmUiLCAidHlwZSI6ICJkaWQtY29tbXVuaWNhdGlvbiIsICJyZWNpcGllbnRLZXlzIjogWyJkaWQ6a2V5Ono2TWtrRWNDVkU2RG1tdThUTXRVUjhvWng2cnZTc3NiQUdFYmRxeFZ3TG9jR0t6NiN6Nk1ra0VjQ1ZFNkRtbXU4VE10VVI4b1p4NnJ2U3NzYkFHRWJkcXhWd0xvY0dLejYiXSwgInNlcnZpY2VFbmRwb2ludCI6ICJodHRwOi8vMTkyLjE2OC4xLjEwOjkwMTMifV19"}},"required":["longUrl"]},"OOBInvitationDetails":{"type":"object","properties":{"messageProtocol":{"type":"string","example":"AIP2_0","enum":["AIP2_0","OID4VC"],"description":"The protocol in which the message should be sent and is specified by the sender of the message"},"theirLabel":{"type":"string","example":"Faber","description":"The label the oob invitation recipient receives alongwith the invitation URL received"},"invitationId":{"type":"number","example":1,"description":"This is the ID for the invitation an identity has sent to another identity to establish a connection."}},"required":["messageProtocol","theirLabel","invitationId"]},"OOBInvitationDetailsResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"Invitation saved successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"description":"Response details","allOf":[{"$ref":"#/components/schemas/OOBInvitationDetails"}]}},"required":["success","message","data"]},"AcceptConnectionRequest":{"type":"object","properties":{"invitationId":{"type":"number","example":1,"description":"The ID of the invitation to accept."},"givenName":{"type":"string","example":"john doe","description":"The name of the user accepting the connection."}},"required":["givenName"]},"DIDExchangeResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"connection request accepted successful.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/DidExchange"}},"required":["success","message","data"]},"PendingConnectionData":{"type":"object","properties":{"invitationId":{"type":"number","example":1,"description":"The unique identifier for the invitation record."},"connectionId":{"type":"string","example":"f0f2c80f-ff5d-4193-9a26-4ba633b6c5f2","description":"The unique connection ID assigned to this invitation."},"lobName":{"type":"string","example":"Air BnB","description":"The name of the organization or service involved in the connection."},"givenName":{"type":"string","example":"John","description":"The given name of the invitee."},"messageProtocol":{"type":"string","example":"didcomm/aip2;env=rfc19","description":"The communication protocol used for this connection."},"theirDid":{"type":"string","example":"did:sov:VV9pK5ZrLPRwYmotgACPkC","description":"The DID of the recipient in the connection."},"myRole":{"type":"string","example":"invitee","description":"The role of the current user in this connection."},"theirRole":{"type":"string","example":"inviter","description":"The role of the other party in the connection."},"recipientEmail":{"type":"string","example":"john@example.com","description":"The email address of the recipient."},"createdAt":{"type":"string","example":"2024-05-31T11:32:42.083Z","description":"Timestamp when the invitation was created."},"updatedAt":{"type":"string","example":"2024-05-31T11:32:42.083Z","description":"Timestamp when the invitation record was last updated."},"exchangeId":{"type":"string","example":"","description":"Exchange ID associated with this connection."}},"required":["invitationId","connectionId","lobName","givenName","messageProtocol","theirDid","myRole","theirRole","recipientEmail","createdAt","updatedAt","exchangeId"]},"PaginationMeta":{"type":"object","properties":{"totalItems":{"type":"number","example":100,"description":"The total number of items available in the dataset."},"itemCount":{"type":"number","example":10,"description":"The number of items on the current page."},"limit":{"type":"number","example":10,"description":"The maximum number of items displayed per page."},"totalPages":{"type":"number","example":10,"description":"The total number of pages available based on the dataset and limit."},"currentPage":{"type":"number","example":1,"description":"The current page number that the user is viewing."}},"required":["itemCount","limit","currentPage"]},"PendingConnection":{"type":"object","properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/PendingConnectionData"}},"meta":{"$ref":"#/components/schemas/PaginationMeta"}},"required":["items","meta"]},"PendingConnectionResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"pending connection record fetched successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/PendingConnection"}},"required":["success","message","data"]},"ContactDetail":{"type":"object","properties":{"givenName":{"type":"string","example":"John Doe","description":"The full name of the contact."},"email":{"type":"string","example":"john@yopmail.com","description":"The email address of the contact, if provided."},"phone":{"type":"string","example":"9876543210","description":"The phone number of the contact, if available."},"logo":{"type":"string","example":"https://example.com/logo.png","description":"A URL pointing to the logo or profile picture of the contact."}},"required":["givenName"]},"ContactDetails":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"Contact details fetched successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/ContactDetail"}},"required":["success","message","data"]},"PendingContact":{"type":"object","properties":{"id":{"type":"string","example":"055567a8-fc5f-4c74-bfab-daccf5482b15","description":"The unique ID of the pending contact."},"givenName":{"type":"string","example":"alice","description":"The given name of the pending contact."},"role":{"type":"string","example":"SINGLE","description":"The role of the pending contact."},"email":{"type":"string","example":"faber@getnada.com","description":"The email address associated with the pending contact."},"phone":{"type":"string","example":"9876543210","description":"The phone number associated with the pending contact."},"logo":{"type":"string","example":"https://example.com/logo.png","description":"The logo associated with the pending contact."},"piiVCId":{"type":"string","example":"","description":"The PII (Personally Identifiable Information) VC ID associated with the pending contact."},"createdAt":{"type":"string","example":"2024-05-31T11:32:42.083Z","description":"The creation timestamp for the pending contact."},"updatedAt":{"type":"string","example":"2024-05-31T11:32:42.083Z","description":"The last updated timestamp for the pending contact."}},"required":["id","givenName","role","email","phone","logo","piiVCId","createdAt","updatedAt"]},"Contact":{"type":"object","properties":{"item":{"type":"array","items":{"$ref":"#/components/schemas/PendingContact"}},"meta":{"$ref":"#/components/schemas/PaginationMeta"}},"required":["item","meta"]},"PendingContactList":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"contact list fetched successful.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/Contact"}},"required":["success","message","data"]},"InvitationDeleteRequest":{"type":"object","properties":{"invitationId":{"type":"number","example":"1","description":"This is the ID for the invitation an identity has sent to another identity to establish a connection."}},"required":["invitationId"]},"InvitationDelete":{"type":"object","properties":{"responseDetails":{"type":"string","example":"Invitation record with id '1' is deleted successfully!","description":"Confirmation message for successfully deleting an invitation record."}},"required":["responseDetails"]},"DeleteInvitationResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"Invitation record deleted successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/InvitationDelete"}},"required":["success","message","data"]},"ContactDeleteRequest":{"type":"object","properties":{"contactId":{"type":"string","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6","description":"This is the ID for the invitation an identity has sent to another identity to establish a connection."}},"required":["contactId"]},"ContactDelete":{"type":"object","properties":{"responseDetails":{"type":"string","example":"Contact record with id '3fa85f64-5717-4562-b3fc-2c963f66afa6' is deleted successfully.","description":"Confirmation message for successfully deleting a contact record."}},"required":["responseDetails"]},"DeleteContactResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"contact record deleted successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/ContactDelete"}},"required":["success","message","data"]}}}}