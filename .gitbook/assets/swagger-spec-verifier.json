{"openapi":"3.0.0","paths":{"/health":{"get":{"operationId":"HealthController_selfCheck","summary":"this api check application running health","parameters":[],"responses":{"200":{"description":"The Health Check is successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"ok"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"error":{"type":"object","example":{},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true}}}}}}},"503":{"description":"The Health Check is not successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"error":{"type":"object","example":{"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"},"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true}}}}}}}},"tags":["health"]}},"/api/lob/{lob_id}/define-proof-request":{"post":{"operationId":"ProofController_proofDefine","summary":"The Define Proof Request API is called to create and store a proof request template","parameters":[{"name":"lob_id","required":true,"in":"path","description":"UUID received upon LOB registration","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProofDefineRequest"}}}},"responses":{"201":{"description":"API successfully created new records","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProofDefineResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["proof-request"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/defined-proofs":{"get":{"operationId":"ProofController_getDefineProofRequest","summary":"The Retrieve All Defined Proofs API is called to retrieve all stored proof requests","parameters":[{"name":"search","required":false,"in":"query","schema":{}},{"name":"limit","required":false,"in":"query","example":10,"schema":{}},{"name":"page","required":false,"in":"query","example":1,"schema":{}},{"name":"lob_id","required":true,"in":"path","description":"UUID received upon LOB registration","schema":{}}],"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RetrieveProofDefineResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["proof-request"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/proof/send-oob":{"post":{"operationId":"ProofController_sendOOBProofRequest","summary":"The Send Out of Band Proof Request API is called to send a proof request as an out-of-band request","parameters":[{"name":"lob_id","required":true,"in":"path","description":"UUID received upon LOB registration","schema":{"type":"string"}},{"name":"connectionless","required":true,"in":"query","example":false,"schema":{"type":"boolean"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OOBProofRequest"}}}},"responses":{"201":{"description":"API successfully created new records","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendOObResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["proof-request"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/proof/url":{"post":{"operationId":"ProofController_sendQrProofRequest","summary":"The Prepare URL for Proof Request API is called to prepare a URL-based proof request","parameters":[{"name":"lob_id","required":true,"in":"path","description":"UUID received upon LOB registration","schema":{"type":"string"}},{"name":"connectionless","required":true,"in":"query","example":false,"schema":{"type":"boolean"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/QRProofRequest"}}}},"responses":{"201":{"description":"API successfully created new records","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendPresentationQrResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["proof-request"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/proof/send-contact":{"post":{"operationId":"ProofController_sendProofRequest","summary":"The Send Proof Request to Contact API is called to send a proof request to an established contact","parameters":[{"name":"lob_id","required":true,"in":"path","description":"UUID received upon LOB registration","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendProofRequest"}}}},"responses":{"201":{"description":"API successfully created new records","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendPresentationResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["proof-request"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/proof-request/{cred_proof_id}":{"get":{"operationId":"ProofController_presentProofRequestStatus","summary":"Retrieve status of a specific proof request","parameters":[{"name":"cred_proof_id","required":true,"in":"path","description":"Unique identifier for the proof request is used to check the status of the credential exchange interaction with the holder’s wallet","schema":{}},{"name":"lob_id","required":true,"in":"path","description":"UUID received upon LOB registration","schema":{}}],"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProofRequestStatusResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["proof-request"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/proof-requests":{"get":{"operationId":"ProofController_retrieveProofRequests","summary":"Retrieve status of all proof requests","parameters":[{"name":"state","required":false,"in":"query","schema":{"enum":["proposal-sent","proposal-received","request-sent","request-received","presentation-sent","presentation-received","done","abandoned","deleted","verified"],"type":"string"}},{"name":"search","required":false,"in":"query","schema":{}},{"name":"limit","required":false,"in":"query","example":10,"schema":{}},{"name":"page","required":false,"in":"query","example":1,"schema":{}},{"name":"lob_id","required":true,"in":"path","description":"UUID received upon LOB registration","schema":{}}],"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProofRequestResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["proof-request"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/proof-request":{"delete":{"operationId":"ProofController_deleteProofRequest","summary":"The Delete Proof Request API is called to delete a stored proof request","parameters":[{"name":"lob_id","required":true,"in":"path","description":"UUID received upon LOB registration","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteProofRequest"}}}},"responses":{"200":{"description":"API request processed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteProofRequestResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["proof-request"],"security":[{"api-key":[]}]}},"/api/lob/{lob_id}/proof/verify":{"post":{"operationId":"ProofController_verifyProofRequest","summary":"The Verify Proof Request API is called to verify a proof request","parameters":[{"name":"lob_id","required":true,"in":"path","description":"UUID received upon LOB registration","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VerifyProofRequest"}}}},"responses":{"201":{"description":"Proof request verified successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VerifyProofRequestResponse"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"401":{"description":"Invalid API Key included in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedResponse"}}}},"404":{"description":"URL cannot be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundErrorResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"tags":["proof-request"],"security":[{"api-key":[]}]}}},"info":{"title":"Orbit Verifier API","description":"Verifier API is a SAAS service that Verifier entity uses to verify credential to peer entities.","version":"1.0","contact":{}},"tags":[],"servers":[],"components":{"securitySchemes":{"api-key":{"type":"apiKey","in":"header","name":"api-key"}},"schemas":{"BadRequestResponse":{"type":"object","properties":{"message":{"type":"string","example":"A required parameter was missing in the request"},"error":{"type":"string","example":"Bad Request"},"statusCode":{"type":"number","example":400}},"required":["message","error","statusCode"]},"UnauthorizedResponse":{"type":"object","properties":{"message":{"type":"string","example":"Invalid API Key included in the request"},"error":{"type":"string","example":"UnauthorizedException"},"statusCode":{"type":"number","example":401}},"required":["message","error","statusCode"]},"NotFoundErrorResponse":{"type":"object","properties":{"message":{"type":"string","example":"URL cannot be found"},"error":{"type":"string","example":"Not Found"},"statusCode":{"type":"number","example":404}},"required":["message","error","statusCode"]},"InternalServerErrorResponse":{"type":"object","properties":{"message":{"type":"string","example":"The server encountered an unexpected condition that prevented it from fulfilling the request"},"error":{"type":"string","example":"InternalServerErrorException"},"statusCode":{"type":"number","example":500}},"required":["message","error","statusCode"]},"RequestedAttributes":{"type":"object","properties":{"attributes":{"example":["full_name","email_address"],"description":"An array of attribute names that are being requested in the proof.","type":"array","items":{"type":"string"}},"proofValidTill":{"type":"object","example":"2025-04-07T14:08:42.309Z","description":"The timestamp or expiration time until which the proof is considered valid."},"proofValidFrom":{"type":"object","example":"2025-04-07T14:08:42.309Z","description":""},"restrictions":{"example":[{"anoncredsSchemaId":"WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0","anoncredsSchemaIssuerDid":"WgWxqztrNooG92RXvxSTWv","anoncredsSchemaName":"schema_name","anoncredsSchemaVersion":"1.0","anoncredsIssuerDid":"WgWxqztrNooG92RXvxSTWv","anoncredsCredDefId":"WgWxqztrNooG92RXvxSTWv:3:CL:20:tag","jsonldContextUrl":"https://w3id.org/citizenship/v1"}],"description":"An array of restriction objects that limit the proof request to specific schemas, issuers, or credential definitions.","type":"array","items":{"type":"string"}}},"required":["attributes"]},"RequestedPredicates":{"type":"object","properties":{"attributeName":{"type":"string","example":"age","description":"Name of the attribute."},"pType":{"type":"string","example":"<","description":"Condition for validation."},"pValue":{"type":"number","example":0,"description":"Threshold value of the attribute to be validated."},"proofValidTill":{"type":"object","example":"2025-04-07T14:08:42.309Z","description":"The timestamp or expiration time until which the proof is considered valid."},"proofValidFrom":{"type":"object","example":"2025-04-07T14:08:42.309Z","description":""},"restrictions":{"example":[{"anoncredsSchemaId":"WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0","anoncredsSchemaIssuerDid":"WgWxqztrNooG92RXvxSTWv","anoncredsSchemaName":"schema_name","anoncredsSchemaVersion":"1.0","anoncredsIssuerDid":"WgWxqztrNooG92RXvxSTWv","anoncredsCredDefId":"WgWxqztrNooG92RXvxSTWv:3:CL:20:tag"}],"description":"An array of restriction objects that limit the proof request to specific schemas, issuers, or credential definitions.","type":"array","items":{"type":"string"}}},"required":["attributeName","pType","pValue"]},"ProofDefineRequest":{"type":"object","properties":{"requestedAttributes":{"description":"List of credential attributes for which values are requested from the holder’s wallet","type":"array","items":{"$ref":"#/components/schemas/RequestedAttributes"}},"requestedPredicates":{"description":"List of requested predicates (if applicable)","type":"array","items":{"$ref":"#/components/schemas/RequestedPredicates"}},"proofName":{"type":"string","example":"bcovrin proof define","description":"Provide a name for the proof request"},"proofPurpose":{"type":"string","example":"for verify anoncreds credential","description":"Provide a purpose for the proof request"},"proofCredFormat":{"type":"string","enum":["ANONCREDS","JSONLD","OID4VC"],"description":"Proof Request format can be ANONCRED, JSONLD or OID4VC"}},"required":["requestedAttributes","proofName","proofPurpose","proofCredFormat"]},"ProofDefine":{"type":"object","properties":{"proofDefineId":{"type":"number","example":1,"description":"The unique identifier for the proof that has been defined in the system."}},"required":["proofDefineId"]},"ProofDefineResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Indicates whether the proof definition operation was successful."},"message":{"type":"string","example":"ANONCREDS proof has been defined successfully.","description":"A message providing information about the operation status."},"data":{"$ref":"#/components/schemas/ProofDefine"}},"required":["success","message","data"]},"ProofDefineGet":{"type":"object","properties":{"proofDefineId":{"type":"number","example":1,"description":"The unique identifier for the defined proof."},"name":{"type":"string","example":"bcovrin proof define","description":"The name of the defined proof for identification purposes."},"attributes":{"$ref":"#/components/schemas/RequestedAttributes"},"predicates":{"$ref":"#/components/schemas/RequestedPredicates"},"proofType":{"type":"string","example":"ANONCREDS","description":"The type of proof being defined. For example, \"ANONCREDS\" indicates an AnonCreds proof."},"purpose":{"type":"string","example":"for verify anoncreds credential","description":"The purpose or intent of defining this proof."},"createdAt":{"type":"string","example":"2024-07-19T11:55:33.799Z","description":"The timestamp indicating when this proof was created."},"updatedAt":{"type":"string","example":"2024-07-19T11:55:33.799Z","description":"The timestamp indicating when this proof was last updated."}},"required":["proofDefineId","name","attributes","predicates","proofType","purpose","createdAt","updatedAt"]},"PaginationMeta":{"type":"object","properties":{"totalItems":{"type":"number","example":100,"description":"The total number of items available for pagination."},"itemCount":{"type":"number","example":10,"description":"The number of items in the current page."},"itemsPerPage":{"type":"number","example":10,"description":"The number of items per page."},"totalPages":{"type":"number","example":10,"description":"The total number of pages available."},"currentPage":{"type":"number","example":1,"description":"The current page number."}},"required":["totalItems","itemCount","itemsPerPage","totalPages","currentPage"]},"RetrieveProofDefine":{"type":"object","properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/ProofDefineGet"}},"meta":{"$ref":"#/components/schemas/PaginationMeta"}},"required":["items","meta"]},"RetrieveProofDefineResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Indicates whether the operation to fetch the proof definition was successful."},"message":{"type":"string","example":"define proof-request fetch successfully","description":"A message describing the result of the fetch operation."},"data":{"$ref":"#/components/schemas/RetrieveProofDefine"}},"required":["success","message","data"]},"OOBProofRequest":{"type":"object","properties":{"proofDefineId":{"type":"number","example":1,"description":"ID corresponding to the stored proof request to be sent"},"credProofId":{"type":"string","example":"58e02d58-a762-469e-84ba-882a47345775","description":"A unique identifier for the client credential proof. If not provided, a new UUID will be generated automatically."},"proofAutoVerify":{"type":"boolean","example":false,"description":"Specifies whether the proof verification process should be performed automatically upon fetching the proof definition."},"recipientEmail":{"type":"string","example":"john@gmail.com","description":"Specify the email address of the recipient receiving the proof request."},"recipientName":{"type":"string","example":"john","description":"Specify the name of the recipient receiving the proof request."}},"required":["proofDefineId","proofAutoVerify","recipientEmail","recipientName"]},"SendOOb":{"type":"object","properties":{"credProofId":{"type":"string","example":"58e02d58-a762-469e-84ba-882a47345775","description":"A unique identifier for the client credential proof being sent out-of-band."},"proofDefineId":{"type":"number","example":1,"description":"The identifier for the proof definition associated with the out-of-band credential proof request."},"proofStatus":{"type":"string","example":"request-sent","description":"The current status of the proof request being sent out-of-band.","enum":["proposal-sent","proposal-received","request-sent","request-received","presentation-sent","presentation-received","done","abandoned","deleted","verified"]}},"required":["credProofId","proofDefineId","proofStatus"]},"SendOObResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Indicates whether the OOB proof request was sent successfully."},"message":{"type":"string","example":"out-of-band proof request send successfully.","description":"Descriptive message about the outcome of the operation."},"data":{"$ref":"#/components/schemas/SendOOb"}},"required":["success","message","data"]},"QRProofRequest":{"type":"object","properties":{"proofDefineId":{"type":"number","example":1,"description":"ID corresponding to the stored proof request for which a URL will be provided as a response"},"messageProtocol":{"type":"string","example":"AIP2_0","description":"The protocol in which the message should be sent and is specified by the sender of the message","enum":["AIP2_0","OID4VC"]},"credProofId":{"type":"string","example":"58e02d58-a762-469e-84ba-882a47345775","description":"A unique identifier for the client credential proof. If not provided, a new UUID will be generated automatically."},"proofAutoVerify":{"type":"boolean","example":false,"description":"Specifies whether the proof verification process should be performed automatically upon fetching the proof definition."}},"required":["proofDefineId","messageProtocol","proofAutoVerify"]},"SendPresentation":{"type":"object","properties":{"shortUrl":{"type":"string","example":"http://localhost:5001/url/3fa85f64-5717-4562-b3fc-2c963f66afa6","format":"uri","description":"Shortened URL for the proof request."},"longUrl":{"type":"string","example":"http://localhost:9001?VRBd056YzJPREkwTkRJd05URTVPVFV3TnpZd09UVTBNelU1TXpVMk5UQTFNRGd4TXpFMk1ESTFPVFkwTlRZd09ETTJOemN6TkRnNE1EUTVOREkwTWpNMk5UYzVPREV4TlRBM01qa3hOelU1TWpFeE5URXdOellpWFYxOUxDQWlibTl1WTJVaU9pQWlPRGt5TlRjNU1UTTVNemMxTWpVeE1qQXpNell5TXpBNEluMD0ifX1dfX19XSwgInNlcnZpY2VzIjogW3siaWQiOiAiI2lubGluZSIsICJ0eXBlIjogImRpZC1jb21tdW5pY2F0aW9uIiwgInJlY2lwaWVudEtleXMiOiBbImRpZDprZXk6ejZNa3R0cXJuQWVxSDl6SENid0RoS0Jab0FucWNKOXczb2tQeXdtOUcyS3l5Sm9iI3o2TWt0dHFybkFlcUg5ekhDYndEaEtCWm9BbnFjSjl3M29rUHl3bTlHMkt5eUpvYiJdLCAic2VydmljZUVuZHBvaW50IjogImh0dHA6Ly91bmRlZmluZWQ6OTAwMSJ9XX0=","format":"uri","description":"Long URL containing all the encoded proof request details."},"proofDefineId":{"type":"number","example":1,"description":"This is the ID for the proof request received by the holder and the proof request sent by the verifier"},"credProofId":{"type":"string","example":"58e02d58-a762-469e-84ba-882a47345775","description":"A unique identifier for the client credential proof being sent out-of-band."},"proofStatus":{"type":"string","example":"request-sent","description":"The current status of the proof request being sent out-of-band.","enum":["proposal-sent","proposal-received","request-sent","request-received","presentation-sent","presentation-received","done","abandoned","deleted","verified"]}},"required":["shortUrl","longUrl","proofDefineId","credProofId","proofStatus"]},"SendPresentationQrResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Indicates whether the QR proof request preparation succeeded."},"message":{"type":"string","example":"prepare qr proof request proceed successfully.","description":"Descriptive message about the QR proof request preparation."},"data":{"$ref":"#/components/schemas/SendPresentation"}},"required":["success","message","data"]},"SendProofRequest":{"type":"object","properties":{"comment":{"type":"string","example":"comment","description":"ID corresponding to the stored proof request to be sent"},"proofDefineId":{"type":"number","example":1,"description":"ID corresponding to the stored proof request for which a URL will be provided as a response"},"contactId":{"type":"string","example":"693a8020-7da8-41af-841b-a7e2caa6cf08","description":"ID corresponding to the contact. This ID will be provided by the Connection API."},"credProofId":{"type":"string","example":"58e02d58-a762-469e-84ba-882a47345775","description":"A unique identifier for the client credential proof. If not provided, a new UUID will be generated automatically."},"proofAutoVerify":{"type":"boolean","example":false,"description":"Specifies whether the proof verification process should be performed automatically upon fetching the proof definition."}},"required":["proofDefineId","contactId","proofAutoVerify"]},"SendPresentationResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Indicates whether the proof request was sent successfully."},"message":{"type":"string","example":"proof request sended successfully.","description":"Descriptive message about the outcome of the proof request sending."},"data":{"$ref":"#/components/schemas/SendOOb"}},"required":["success","message","data"]},"ProofData":{"type":"object","properties":{"credProofId":{"type":"string","example":"58e02d58-a762-469e-84ba-882a47345775","description":"The unique identifier of the associated proof request."},"updatedAt":{"type":"string","example":"2024-11-26T10:15:30.000Z","description":"The timestamp indicating when the proof data was last updated."},"createdAt":{"type":"string","example":"2024-11-25T08:00:00.000Z","description":"The timestamp indicating when the proof data was created."},"proofStatus":{"type":"string","example":"done","description":"The current state of the proof data."},"comment":{"type":"string","example":"Optional comment or additional details.","description":"An optional comment or message associated with the proof data."},"proofAutoVerify":{"type":"boolean","example":true,"description":"Specifies whether the proof verification process should be performed automatically upon fetching the proof definition."},"contactId":{"type":"string","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6","description":"The unique identifier of the contact associated with the proof."},"verified":{"type":"boolean","example":"true","description":"Indicates whether the proof was successfully verified."},"errorMsg":{"type":"string","example":"abandoned","description":"An optional error message or status describing why the proof process failed or was interrupted."}},"required":["credProofId","proofStatus","proofAutoVerify"]},"PresentationRecordResponse":{"type":"object","properties":{"status":{"type":"string","example":"generated","enum":["generated","scanned","request-sent","proof-received","success","revoked","verification-failed"],"description":"The current status of the presentation record."},"data":{"$ref":"#/components/schemas/ProofData"},"proofAttributes":{"type":"object","description":"Optional proof attributes. Can contain additional data related to the proof."}},"required":["status","data"]},"ProofRequestStatusResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Indicates if the API request was successful."},"message":{"type":"string","example":"present proof request status get successfully.","description":"A descriptive message about the status of the request."},"data":{"$ref":"#/components/schemas/PresentationRecordResponse"}},"required":["success","message","data"]},"ProofRequestStatus":{"type":"object","properties":{"credProofId":{"type":"string","example":"58e02d58-a762-469e-84ba-882a47345775","description":"This is the client cred ID for the proof request received by the holder and the proof request sent by the verifier"},"proofStatus":{"type":"string","example":"done","description":"The current status of the proof request."},"verified":{"type":"boolean","example":true,"description":"Indicates whether the proof has been verified successfully."},"proofAutoVerify":{"type":"boolean","example":true,"description":"Specifies whether the proof verification process should be performed automatically upon fetching the proof definition."},"authorityStatement":{"type":"string","example":"offer-trusted","description":"The authority statement indicating the level of trust for the proof request."}},"required":["credProofId","proofStatus","verified","proofAutoVerify","authorityStatement"]},"GetProofRequestRecord":{"type":"object","properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/ProofRequestStatus"}},"meta":{"$ref":"#/components/schemas/PaginationMeta"}},"required":["items","meta"]},"ProofRequestResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Indicates whether the operation was successful."},"message":{"type":"string","example":"Proof Request record fetch successfully.","description":"Descriptive message about the result of the fetch operation."},"data":{"$ref":"#/components/schemas/GetProofRequestRecord"}},"required":["success","message","data"]},"DeleteProofRequest":{"type":"object","properties":{"credProofId":{"type":"string","example":"58e02d58-a762-469e-84ba-882a47345775","description":"The unique identifier of the proof request to be deleted."}},"required":["credProofId"]},"DeleteProofResponse":{"type":"object","properties":{"responseDetails":{"type":"string","example":"Proof request with id '1' has been deleted successfully.","description":"A message providing details about the delete operation."},"proofDefineId":{"type":"number","example":1,"description":"ID corresponding to the stored proof request for which a URL will be provided as a response"},"credProofId":{"type":"string","example":"58e02d58-a762-469e-84ba-882a47345775","description":"A unique identifier for the client credential proof."},"proofStatus":{"type":"string","example":"done","description":"The current state of the proof data."}},"required":["responseDetails","proofDefineId","proofStatus"]},"DeleteProofRequestResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Indicates whether the delete operation was successful."},"message":{"type":"string","example":"Proof request proceed successfully.","description":"A descriptive message summarizing the outcome of the delete request."},"data":{"$ref":"#/components/schemas/DeleteProofResponse"}},"required":["success","message","data"]},"VerifyProofRequest":{"type":"object","properties":{"credProofId":{"type":"string","example":"58e02d58-a762-469e-84ba-882a47345775","description":"A unique identifier for the client credential proof."},"createClaim":{"type":"boolean","example":false,"description":"Flag indicating whether the claim is being created. Set to true to initiate the claim creation process."}},"required":["credProofId","createClaim"]},"VerifyProofData":{"type":"object","properties":{"credProofId":{"type":"string","example":"58e02d58-a762-469e-84ba-882a47345775","description":"The unique ID of the proof request associated with this proof data."},"updatedAt":{"type":"string","example":"2024-11-25T12:34:56Z","description":"The timestamp when the proof data was last updated."},"createdAt":{"type":"string","example":"2024-11-25T12:34:56Z","description":"The timestamp when the proof data was initially created."},"proofStatus":{"type":"string","example":"done","description":"The current state of the proof request."},"proofAutoVerify":{"type":"boolean","example":true,"description":"Specifies whether the proof verification process should be performed automatically upon fetching the proof definition."},"comment":{"type":"string","example":"Proof successfully verified.","description":"Additional comments or notes regarding the proof request."},"contactId":{"type":"string","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6","description":"The ID of the contact associated with this proof request."},"verified":{"type":"boolean","example":true,"description":"Indicates whether the proof request was successfully verified."},"errorMsg":{"type":"string","example":"abandoned","description":"An error message describing any issues encountered during verification."}},"required":["credProofId","proofStatus","proofAutoVerify"]},"VerifyPresentationRecordResponse":{"type":"object","properties":{"status":{"type":"string","example":"success","enum":["generated","scanned","request-sent","proof-received","success","revoked","verification-failed"],"description":"The status of the presentation verification process."},"data":{"$ref":"#/components/schemas/VerifyProofData"},"proofAttributes":{"type":"object","example":{"HiNg6sdwNYwPRTTP9VkwpT:3:CL:2535708:Aadhar_card":[{"credentialName":"HiNg6sdwNYwPRTTP9VkwpT:3:CL:2545708:Aadhar_card","attributes":[{"full_name":"John Doe"}]}]},"description":"Optional attributes of the proof used in the verification process."}},"required":["status","data"]},"VerifyProofRequestResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true,"description":"Should be “true” in the response body for series 200 response"},"message":{"type":"string","example":"Proof request verified successfully.","description":"Standardized description of the response body for series 200, 300, 400 and 500 response"},"data":{"$ref":"#/components/schemas/VerifyPresentationRecordResponse"}},"required":["success","message","data"]}}}}